variables:
  - folders:
    - ~/dev
    - ~/dev/analytics
    - ~/dev/coretask
information: |
  This is a sample task file to demonstrate what TaskRunner is for.
  Here you can include the author or the intended use, for example.
  Open up the yaml file to see the usage.
  Author: Paul Glushak (paul@glushak.net)
tasks:
  intro:
    text: Welcome! \o/
  intro_2:
    text: We can just display text.
  intro_3:
    text: |
      We can display a long, multiline paragraph, in case we need an explanation of how to do things,
      or how a user should act going forward. This might be useful in conjuncture with a `require_input` flag.
    require_input: True
  username:
    text: Another thing we can do with `require_input` is to use the provided input using `variables.<task_name>_input`.
    require_input: "Enter your name:"
    run: echo "variables.username_input"
  simple_command:
    text: We can run a simple command, like making sure we have a tool installed.
    run: command -v brew
  simple_failing_command:
    text: Or have the same thing fail.
    run: command -v thiscommanddoesnotexist
  not_shell_command:
    text: A command can run with shell=False if passed as a list
    run:
      - pyenv
      - version
  using_output:
    text: We can use the output from a previous task, for example the earlier provided name.
    run: whoami | grep -i "variables.username_output"
  success_code:
    text: We can also specify the success code for each task.
    run: abracadabra
    success: 127
  check_folders:
    text: We can pass multiple values for a command to run with, like checking for folders.
    each:
      - /Library
      - ~/Downloads
    run: test -e {}
  check_folders_2:
    text: Or we can use `variables.varname` to reference a variable to do the same thing.
    each: variables.folders
    run: ls -l {}
  cwd_task:
    text: We can run a command in a different folder using cwd.
    cwd: ~/dev/
    run: ls -l .
  check_out_task:
    text: We can also check for output, using `check`.
    run: curl -s "http://worldtimeapi.org/api/ip"
    check: Jerusalem